{"version":3,"sources":["components/Home/Home.tsx","components/GoldCalculator/GoldCalculator.tsx","components/InterestRate/InterestRate.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Home","className","React","Component","GoldCalculator","handleCalculate","e","preventDefault","console","log","style","padding","span","paddingRight","layout","onSubmit","this","Item","label","defaultValue","width","Option","value","placeholder","min","type","htmlType","paddingLeft","InterestRate","App","mode","key","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gUAEqBA,E,iLAEjB,OAAQ,yBAAKC,UAAU,QAAf,4E,GAFsBC,IAAMC,W,+DCCnBC,E,2MACnBC,gBAAkB,SAACC,GACjBA,EAAEC,iBACFC,QAAQC,IAAI,8B,wEAIZ,OACE,kBAAC,IAAD,CAAKC,MAAO,CAAEC,QAAS,KACrB,kBAAC,IAAD,CAAKC,KAAM,GAAIF,MAAO,CAAEG,aAAc,KACpC,kBAAC,IAAD,CAAMC,OAAO,WAAWC,SAAUC,KAAKX,iBACrC,sDACA,6BACA,kBAAC,IAAKY,KAAN,CAAWC,MAAM,kCACf,kBAAC,IAAD,CAAQC,aAAa,WAAMT,MAAO,CAAEU,MAAO,MACzC,kBAAC,IAAOC,OAAR,CAAeC,MAAM,YAArB,YACA,kBAAC,IAAOD,OAAR,CAAeC,MAAM,mBAArB,qBAGJ,kBAAC,IAAKL,KAAN,CAAWC,MAAM,4BACf,kBAAC,IAAD,CAAaK,YAAY,0BAAWC,IAAK,EAAGL,aAAc,KAE5D,kBAAC,IAAKF,KAAN,CAAWC,MAAM,+BACf,kBAAC,IAAD,CAAOK,YAAY,gCAErB,kBAAC,IAAKN,KAAN,CAAWC,MAAM,0CACf,kBAAC,IAAD,CAAOK,YAAY,2CAErB,kBAAC,IAAKN,KAAN,CAAWC,MAAM,gCACf,kBAAC,IAAD,CAAOK,YAAY,iCAErB,kBAAC,IAAKN,KAAN,KACE,kBAAC,IAAD,CAAQQ,KAAK,UAAUC,SAAS,UAAhC,+BAGN,kBAAC,IAAD,CAAKd,KAAM,GAAIF,MAAO,CAAEiB,YAAa,KACnC,iDACA,mC,GArCkCzB,IAAMC,WCD7ByB,E,iLAEjB,OAAO,yBAAK3B,UAAU,gBAAf,6B,GAF+BC,IAAMC,WC6CjC0B,EA/BH,WACV,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAMC,KAAK,cACT,kBAAC,IAAKb,KAAN,CAAWc,IAAI,QACb,kBAAC,IAAD,CAAMC,GAAG,KAAT,mBAEF,kBAAC,IAAKf,KAAN,CAAWc,IAAI,kBACb,kBAAC,IAAD,CAAMC,GAAG,mBAAT,2BAEF,kBAAC,IAAKf,KAAN,CAAWc,IAAI,gBACb,kBAAC,IAAD,CAAMC,GAAG,iBAAT,oBAGJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAChB,kBAAC,EAAD,WC3BQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.82990e72.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Home extends React.Component {\n  render() {\n    return (<div className=\"home\">Chào mừng các bạn đến với Money Tools</div>);\n  }\n}","import React from 'react';\nimport { Form, Input, Button, Select, Row, Col, InputNumber } from 'antd';\n\nexport default class GoldCalculator extends React.Component {\n  handleCalculate = (e: any) => {\n    e.preventDefault();\n    console.log('Received values of form: ');\n  };\n\n  render() {\n    return (\n      <Row style={{ padding: 20 }}>\n        <Col span={12} style={{ paddingRight: 10 }}>\n          <Form layout='vertical' onSubmit={this.handleCalculate}>\n            <b>Tính giá vàng:</b>\n            <hr />\n            <Form.Item label=\"Đơn vị tính:\" >\n              <Select defaultValue=\"chỉ\" style={{ width: 120 }}>\n                <Select.Option value=\"chỉ\">Chỉ</Select.Option>\n                <Select.Option value=\"lượng\">Lượng</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"Số lượng:\" >\n              <InputNumber placeholder=\"Số lượng\" min={1} defaultValue={1} />\n            </Form.Item>\n            <Form.Item label=\"Giá mua vàng cũ:\" >\n              <Input placeholder=\"Giá mua vàng cũ\" />\n            </Form.Item>\n            <Form.Item label=\"Giá mua vàng hiện tại:\" >\n              <Input placeholder=\"Giá mua vàng hiện tại\" />\n            </Form.Item>\n            <Form.Item label=\"Giá mua vàng mới:\" >\n              <Input placeholder=\"Giá mua vàng mới\" />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">Tính toán lời</Button>\n            </Form.Item>\n          </Form></Col>\n        <Col span={12} style={{ paddingLeft: 10 }}>\n          <b>Kết quả:</b>\n          <hr />\n        </Col>\n      </Row>\n    );\n  }\n}","import React from 'react';\n\nexport default class InterestRate extends React.Component {\n  render() {\n    return <div className=\"interestRate\">Here is interest rate</div>;\n  }\n}","import React from 'react';\n// import logo from './logo.svg';\n// import { Layout } from 'antd';\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport { Menu } from 'antd';\nimport Home from './components/Home';\nimport GoldCalculator from './components/GoldCalculator';\nimport InterestRate from './components/InterestRate';\n\n\nconst App = () => {\n  return (\n    <Router>\n      <div>\n        <Menu mode=\"horizontal\">\n          <Menu.Item key=\"home\">\n            <Link to=\"/\">Trang chủ</Link>\n          </Menu.Item>\n          <Menu.Item key=\"goalCalculator\">\n            <Link to=\"/GoalCalculator\">Tính giá vàng</Link>\n          </Menu.Item>\n          <Menu.Item key=\"interestRate\">\n            <Link to=\"/InterestRate\">Tính lãi</Link>\n          </Menu.Item>\n        </Menu>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/GoalCalculator\">\n            <GoldCalculator />\n          </Route>\n          <Route exact path=\"/InterestRate\">\n            <InterestRate />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}